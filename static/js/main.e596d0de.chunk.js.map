{"version":3,"sources":["logo.svg","Navbar.js","Quote.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Navbar","React","createElement","id","alt","src","href","Quote","Component","constructor","arguments","state","quote","author","getQuote","fetch","then","response","json","data","console","log","randomIndex","Math","floor","random","length","chosenQuote","text","chosenAuthor","replace","this","setState","catch","error","componentDidMount","render","className","onClick","encodeURIComponent","target","Footer","App","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"iLAAAA,EAAOC,QAAU,IAA0B,kC,4GCe5BC,MAbf,WACI,OACIC,IAAAC,cAAA,OAAKC,GAAG,UACJF,IAAAC,cAAA,OAAKE,IAAI,aAAaC,IAAI,0DAC1BJ,IAAAC,cAAA,OAAKC,GAAG,aACJF,IAAAC,cAAA,KAAGI,KAAK,KAAI,YACZL,IAAAC,cAAA,KAAGI,KAAK,KAAI,YACZL,IAAAC,cAAA,KAAGI,KAAK,KAAI,cCP5B,MAAMC,UAAcC,YAAUC,cAAA,SAAAC,WAAA,KAE1BC,MAAQ,CACJC,MAAO,GACPC,OAAQ,IACX,KAEDC,SAAW,KAEPC,MAAM,+BACDC,KAAKC,GAAYA,EAASC,QAC1BF,KAAMG,IACHC,QAAQC,IAAIF,GACZ,MAAMG,EAAcC,KAAKC,MAAMD,KAAKE,SAAWN,EAAKO,QAC9CC,EAAcR,EAAKG,GAAaM,KACtC,IAAIC,EAAeV,EAAKG,GAAaT,OAChB,aAAjBgB,EACAA,EAAe,UACRA,IACPA,EAAeA,EAAaC,QAAQ,aAAc,KAGtDC,KAAKC,SAAS,CACVpB,MAAOe,EACPd,OAAQgB,MAIfI,MAAMC,GAASd,QAAQC,IAAI,UAAYa,KAGhDC,oBACIJ,KAAKjB,WAGTsB,SACI,OACInC,IAAAC,cAAA,OAAKC,GAAG,aACJF,IAAAC,cAAA,MAAIC,GAAG,QAAO,IAAE4B,KAAKpB,MAAMC,MAAM,KACjCX,IAAAC,cAAA,MAAIC,GAAG,UAAS,KAAG4B,KAAKpB,MAAME,QAC9BZ,IAAAC,cAAA,OAAKC,GAAG,iBACJF,IAAAC,cAAA,UAAQC,GAAG,YAAYkC,UAAU,MAAMC,QAASP,KAAKjB,UAAU,aAC/Db,IAAAC,cAAA,KAAGI,KAAM,yCAA2CiC,mBAAmBR,KAAKpB,MAAMC,OAAQ4B,OAAO,SAASrC,GAAG,eACzGF,IAAAC,cAAA,UAAQmC,UAAU,OAAM,cASjC9B,QCzCAkC,MAXf,WACI,OACIxC,IAAAC,cAAA,cACID,IAAAC,cAAA,SAAG,qFCaAwC,MAXf,WACE,OACEzC,IAAAC,cAAA,OAAKmC,UAAU,OACbpC,IAAAC,cAACF,EAAM,MACPC,IAAAC,cAACK,EAAK,MAENN,IAAAC,cAACuC,EAAM,QCDEE,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,KAAK8B,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDnB,OACHnC,IAAAC,cAACD,IAAMuD,WAAU,KACfvD,IAAAC,cAACwC,EAAG,QAORC,M","file":"static/js/main.e596d0de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React, { Component } from 'react';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav id=\"navbar\">\r\n            <img alt=\"logo image\" src=\"https://avatars.githubusercontent.com/u/146682460?v=4\" />\r\n            <div id=\"nav-links\">\r\n                <a href=\"#\">Homepage</a>\r\n                <a href=\"#\">Projects</a>\r\n                <a href=\"#\">Hire Me</a>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\n\r\nclass Quote extends Component {\r\n\r\n    state = {\r\n        quote: '',\r\n        author: ''\r\n    }\r\n\r\n    getQuote = () => {\r\n        \r\n        fetch(\"https://type.fit/api/quotes\")\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                console.log(data);\r\n                const randomIndex = Math.floor(Math.random() * data.length); // get random index in the quote data\r\n                const chosenQuote = data[randomIndex].text;\r\n                let chosenAuthor = data[randomIndex].author;\r\n                if (chosenAuthor === 'type.fit') {\r\n                    chosenAuthor = 'unknown';\r\n                } else if (chosenAuthor) {\r\n                    chosenAuthor = chosenAuthor.replace(', type.fit', ''); // replaces the wonky API string\r\n                }\r\n\r\n                this.setState({\r\n                    quote: chosenQuote,\r\n                    author: chosenAuthor\r\n                })\r\n\r\n            })\r\n            .catch(error => console.log('Error: ' + error));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getQuote();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"quote-box\">\r\n                <h1 id=\"text\">\"{this.state.quote}\"</h1>\r\n                <h5 id=\"author\">- {this.state.author}</h5>\r\n                <div id=\"input-wrapper\">\r\n                    <button id=\"new-quote\" className=\"btn\" onClick={this.getQuote}>New Quote</button>\r\n                    <a href={\"https://twitter.com/intent/tweet?text=\" + encodeURIComponent(this.state.quote)} target=\"_blank\" id=\"tweet-quote\">\r\n                        <button className=\"btn\">Tweet!</button>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Quote;","import React, { Component } from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <p>\r\n              My mission is to make the world a better place.\r\n              Thank you for visiting my page.\r\n            </p>\r\n          </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Quote from './Quote';\nimport Footer from './Footer';\nimport React, { Component } from 'react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Quote />\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}